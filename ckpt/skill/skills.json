{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  const logTypes = [\"oak_log\", \"birch_log\", \"spruce_log\", \"jungle_log\", \"acacia_log\", \"dark_oak_log\", \"mangrove_log\"];\n\n  // Check if you have any wood logs in your inventory\n  const woodLog = bot.inventory.items().find(item => logTypes.includes(item.name));\n  if (woodLog) {\n    bot.chat(`I already have a wood log in my inventory.`);\n    return;\n  }\n\n  // Find a wood log block using exploreUntil\n  const direction = new Vec3(Math.floor(Math.random() * 3) - 1, Math.floor(Math.random() * 3) - 1, Math.floor(Math.random() * 3) - 1);\n  const woodLogBlock = await exploreUntil(bot, direction, 32, () => {\n    const block = bot.findBlock({\n      matching: block => logTypes.includes(block.name),\n      maxDistance: 32\n    });\n    return block;\n  });\n  if (!woodLogBlock) {\n    bot.chat(`I couldn't find a wood log nearby.`);\n    return;\n  }\n\n  // Mine the wood log block\n  await mineBlock(bot, woodLogBlock.name, 1);\n\n  // Check if you successfully mined the wood log\n  const minedWoodLog = bot.inventory.items().find(item => logTypes.includes(item.name));\n  if (!minedWoodLog) {\n    bot.chat(`I couldn't mine the wood log.`);\n    return;\n  }\n  bot.chat(`I successfully mined a wood log.`);\n}\n\n// Call your main function", "description": "async function mineWoodLog(bot) {\n    // The function is about mining a wood log block. First, it checks if there is any wood log in the inventory. If there is, it returns. If not, it explores the environment until it finds a wood log block nearby. Once a wood log block is found, it mines it. After mining, it checks if the wood log was successfully mined. If it was, it sends a message saying it successfully mined a wood log.\n}"}, "craftWoodenPickaxe": {"code": "async function craftWoodenPickaxe(bot) {\n  // Check if the bot already has a wooden pickaxe\n  const woodenPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName[\"wooden_pickaxe\"].id);\n  if (woodenPickaxe) {\n    bot.chat(\"I already have a wooden pickaxe.\");\n    return;\n  }\n\n  // Check if the bot has enough wooden planks and sticks\n  const woodenPlanks = bot.inventory.count(mcData.itemsByName[\"oak_planks\"].id);\n  const sticks = bot.inventory.count(mcData.itemsByName[\"stick\"].id);\n  if (woodenPlanks < 3 || sticks < 2) {\n    bot.chat(\"I need more materials to craft a wooden pickaxe.\");\n    await mineBlock(bot, \"oak_log\", 1); // Collect more wooden planks\n    await craftItem(bot, \"oak_planks\", 3); // Craft wooden planks\n    await craftItem(bot, \"stick\", 2); // Craft sticks\n  }\n\n  // Find a nearby crafting table\n  const craftingTable = bot.findBlock({\n    matching: mcData.blocksByName.crafting_table.id,\n    maxDistance: 32\n  });\n\n  // Check if a crafting table was found\n  if (!craftingTable) {\n    bot.chat(\"I cannot find a crafting table nearby.\");\n    return;\n  }\n\n  // Craft the wooden pickaxe using the crafting table\n  await bot.pathfinder.goto(new GoalLookAtBlock(craftingTable.position, bot.world));\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n  bot.chat(\"I have successfully crafted a wooden pickaxe.\");\n}", "description": "async function craftWoodenPickaxe(bot) {\n    // The function is about crafting a wooden pickaxe if it is not already available in the bot's inventory. First, it checks if the bot already has a wooden pickaxe, and if so, it returns. If not, it checks if the bot has enough wooden planks and sticks to craft a wooden pickaxe. If not, it collects more wooden planks and crafts the necessary materials. Then, it finds a nearby crafting table and checks if one was found. If not, it returns. Finally, it crafts a wooden pickaxe using the crafting table and notifies that it has successfully crafted a wooden pickaxe.\n}"}, "mineStoneBlocks": {"code": "async function mineStoneBlocks(bot) {\n  const stoneCount = bot.inventory.count(mcData.blocksByName[\"stone\"].id);\n  if (stoneCount >= 20) {\n    bot.chat(\"I already have enough stone blocks.\");\n    return;\n  }\n  let blocksMined = 0;\n  while (blocksMined < 20) {\n    const stoneBlock = bot.findBlock({\n      matching: mcData.blocksByName[\"stone\"].id,\n      maxDistance: 32\n    });\n    if (stoneBlock) {\n      await mineBlock(bot, \"stone\", 1);\n      blocksMined++;\n      bot.chat(`Mined ${blocksMined} stone blocks.`);\n    } else {\n      await exploreUntil(bot, new Vec3(Math.random() < 0.5 ? 1 : -1, 0, Math.random() < 0.5 ? 1 : -1), 60, () => {\n        const stoneBlock = bot.findBlock({\n          matching: mcData.blocksByName[\"stone\"].id,\n          maxDistance: 32\n        });\n        return stoneBlock;\n      });\n    }\n  }\n}\n\n// Call the main function", "description": "async function mineStoneBlocks(bot) {\n    // The function is about mining stone blocks until a total of 20 blocks have been mined. If the bot already has enough stone blocks, it will exit the function. If not, it will continuously search for stone blocks in the environment and mine them one by one. After each successful mining, it will count the number of blocks mined and display the current count. If no stone blocks are found nearby, the bot will explore the environment until it finds one.\n}"}}