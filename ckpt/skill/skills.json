{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  const woodLogName = \"oak_log\"; // or \"birch_log\", \"spruce_log\", \"jungle_log\", \"acacia_log\", \"dark_oak_log\", or \"mangrove_log\"\n  const woodLogCount = 1;\n  const oakLogs = await exploreUntil(bot, new Vec3(1, 0, 1), 32, () => {\n    const oakLog = bot.findBlock({\n      matching: mcData.blocksByName[woodLogName].id,\n      maxDistance: 32\n    });\n    return oakLog;\n  });\n  if (!oakLogs) {\n    bot.chat(`No ${woodLogName} nearby, please explore first`);\n    return;\n  }\n  await mineBlock(bot, woodLogName, woodLogCount);\n  const inventoryItem = bot.inventory.findInventoryItem(mcData.itemsByName[woodLogName].id);\n  if (!inventoryItem) {\n    bot.chat(`Failed to mine the ${woodLogName}. Trying again...`);\n    return mineWoodLog(bot);\n  }\n  bot.chat(`Successfully mined 1 ${woodLogName}.`);\n}", "description": "async function mineWoodLog(bot) {\n    // The function is about mining a specific type of wood log. First, it explores the environment until finding the specified wood log within a maximum distance of 32 blocks. If no wood log is found, it sends a chat message and exits the function. If a wood log is found, it mines one block of the wood log. Then, it checks if the wood log is successfully mined and sends the corresponding chat message. If the wood log is not successfully mined, it sends a chat message and recursively calls the function again.\n}"}, "craftCraftingTable": {"code": "async function craftCraftingTable(bot) {\n  // Step 1: Check if we have enough oak logs\n  const oakLogs = bot.inventory.count(mcData.itemsByName[\"oak_log\"].id);\n  if (oakLogs < 4) {\n    await mineBlock(bot, \"oak_log\", 4);\n  }\n\n  // Step 2: Craft wooden planks\n  await craftItem(bot, \"oak_planks\", 4);\n\n  // Step 3: Check if we have enough wooden planks\n  const woodenPlanks = bot.inventory.count(mcData.itemsByName[\"oak_planks\"].id);\n  if (woodenPlanks < 4) {\n    await mineBlock(bot, \"oak_log\", 4);\n    await craftItem(bot, \"oak_planks\", 4);\n  }\n\n  // Step 4: Craft a crafting table\n  await craftItem(bot, \"crafting_table\", 1);\n}", "description": "async function craftCraftingTable(bot) {\n    // The function is about crafting a crafting table. First, it checks if there are enough oak logs in the inventory. If not, it mines oak logs. Then, it crafts wooden planks. Next, it checks if there are enough wooden planks in the inventory. If not, it mines oak logs again and crafts more wooden planks. Finally, it crafts a crafting table.\n}"}, "craftWoodenTools": {"code": "async function craftWoodenTools(bot) {\n  const woodenPlanksNeeded = 8; // 3 for pickaxe, 2 for sword, and 3 extra\n  const sticksNeeded = 3; // 2 for pickaxe and 1 for sword\n\n  const woodenPlanks = bot.inventory.count(mcData.itemsByName[\"oak_planks\"].id);\n  const sticks = bot.inventory.count(mcData.itemsByName[\"stick\"].id);\n  if (woodenPlanks >= woodenPlanksNeeded && sticks >= sticksNeeded) {\n    bot.chat(\"I already have enough wooden planks and sticks to craft the tools.\");\n  } else {\n    bot.chat(\"I need to collect more materials to craft the tools.\");\n\n    // Craft wooden planks if needed\n    if (woodenPlanks < woodenPlanksNeeded) {\n      const logsNeeded = Math.ceil((woodenPlanksNeeded - woodenPlanks) / 4); // 4 planks per log\n      await mineBlock(bot, \"oak_log\", logsNeeded);\n      await craftItem(bot, \"oak_planks\", logsNeeded * 4);\n    }\n\n    // Craft sticks if needed\n    if (sticks < sticksNeeded) {\n      const logsNeeded = Math.ceil((sticksNeeded - sticks) / 2); // 2 sticks per log\n      await mineBlock(bot, \"oak_log\", logsNeeded);\n      await craftItem(bot, \"stick\", logsNeeded * 2);\n    }\n\n    // Check again if we have enough materials after collecting them\n    const updatedWoodenPlanks = bot.inventory.count(mcData.itemsByName[\"oak_planks\"].id);\n    const updatedSticks = bot.inventory.count(mcData.itemsByName[\"stick\"].id);\n    if (updatedWoodenPlanks >= woodenPlanksNeeded && updatedSticks >= sticksNeeded) {\n      bot.chat(\"I have collected enough materials to craft the tools.\");\n    } else {\n      bot.chat(\"I couldn't collect enough materials to craft the tools.\");\n      return;\n    }\n  }\n\n  // Craft the wooden pickaxe\n  await craftItem(bot, \"wooden_pickaxe\");\n\n  // Craft the wooden sword\n  await craftItem(bot, \"wooden_sword\");\n  bot.chat(\"I have crafted the wooden pickaxe and the wooden sword.\");\n}", "description": "async function craftWoodenTools(bot) {\n    // The function is about crafting a wooden pickaxe and a wooden sword using oak planks and sticks. It first checks if there are enough wooden planks and sticks in the inventory. If not, it collects the necessary materials by mining oak logs and crafting them into planks and sticks. After collecting the materials, it checks again if there are enough resources to craft the tools. If there are, it proceeds to craft the wooden pickaxe and the wooden sword.\n}"}, "yourMainFunctionName": {"code": "async function craftWoodenTools(bot) {\n  const pickaxeRecipe = bot.recipesFor(mcData.itemsByName[\"wooden_pickaxe\"].id, null, 1);\n  const swordRecipe = bot.recipesFor(mcData.itemsByName[\"wooden_sword\"].id, null, 1);\n  const pickaxeCanCraft = pickaxeRecipe.length > 0;\n  const swordCanCraft = swordRecipe.length > 0;\n  if (!pickaxeCanCraft || !swordCanCraft) {\n    await craftCraftingTable(bot);\n    await craftWoodenPlanks(bot);\n    await craftSticks(bot);\n  }\n  if (pickaxeCanCraft) {\n    await craftItem(bot, \"wooden_pickaxe\");\n  } else {\n    bot.chat(\"Not enough resources to craft a wooden pickaxe\");\n  }\n  if (swordCanCraft) {\n    await craftItem(bot, \"wooden_sword\");\n  } else {\n    bot.chat(\"Not enough resources to craft a wooden sword\");\n  }\n}\n\nasync function craftCraftingTable(bot) {\n  const craftingTableRecipe = bot.recipesFor(mcData.itemsByName[\"crafting_table\"].id, null, 1);\n  if (craftingTableRecipe.length > 0) {\n    await craftItem(bot, \"crafting_table\");\n  } else {\n    bot.chat(\"Not enough resources to craft a crafting table\");\n  }\n}\n\nasync function craftWoodenPlanks(bot) {\n  const woodenPlanksRecipe = bot.recipesFor(mcData.itemsByName[\"oak_planks\"].id, null, 4);\n  if (woodenPlanksRecipe.length > 0) {\n    await craftItem(bot, \"oak_planks\", 4);\n  } else {\n    bot.chat(\"Not enough resources to craft wooden planks\");\n  }\n}\n\nasync function craftSticks(bot) {\n  const sticksRecipe = bot.recipesFor(mcData.itemsByName[\"stick\"].id, null, 4);\n  if (sticksRecipe.length > 0) {\n    await craftItem(bot, \"stick\", 4);\n  } else {\n    bot.chat(\"Not enough resources to craft sticks\");\n  }\n}\n\nasync function yourMainFunctionName(bot) {\n  await craftWoodenTools(bot);\n}", "description": "async function yourMainFunctionName(bot) {\n    // The function is about crafting wooden tools (a wooden pickaxe and a wooden sword) if they can be crafted. If there are not enough resources to craft the tools, it crafts a crafting table, wooden planks, and sticks first. The function checks if a wooden pickaxe can be crafted, and if so, it crafts one. Otherwise, it sends a chat message indicating that there are not enough resources to craft a wooden pickaxe. Similarly, the function checks if a wooden sword can be crafted, and if so, it crafts one. Otherwise, it sends a chat message indicating that there are not enough resources to craft a wooden sword.\n}"}}